library(neuralnet)
# iris <- read.csv('iris.csv', header=FALSE)
# Prepare training and testing data
testidx <- which(1:length(iris[,1])%%5 == 0)
iristrain <- iris[-testidx,]
iristest <- iris[testidx,]
nnet_iristrain <- iristrain
#Binarize the categorical output
nnet_iristrain <- cbind(nnet_iristrain, iristrain$Species == 'setosa')
nnet_iristrain <- cbind(nnet_iristrain, iristrain$Species == 'versicolor')
nnet_iristrain <- cbind(nnet_iristrain, iristrain$Species == 'virginica')
names(nnet_iristrain)[6] <- 'setosa'
names(nnet_iristrain)[7] <- 'versicolor'
names(nnet_iristrain)[8] <- 'virginica'
nn <- neuralnet(setosa+versicolor+virginica ~ Sepal.Length+Sepal.Width
+Petal.Length +Petal.Width, data=nnet_iristrain, hidden=c(3))
plot(nn)
mypredict <- compute(nn, iristest[-5])$net.result
# Put multiple binary output to categorical output
maxidx <- function(arr) {return(which(arr == max(arr)))}
idx <- apply(mypredict, c(1), maxidx)
prediction <- c('setosa', 'versicolor', 'virginica')[idx]
table(prediction, iristest$Species)
library(neuralnet)
testidx <- which(1:length(iris[,1])%%5 == 0)
iristrain <- iris[-testidx,]
iristest <- iris[testidx,]
nnet_iristrain <- iristrain
#Binarize the categorical output
nnet_iristrain <- cbind(nnet_iristrain, iristrain$Species == 'setosa')
nnet_iristrain <- cbind(nnet_iristrain, iristrain$Species == 'versicolor')
nnet_iristrain <- cbind(nnet_iristrain, iristrain$Species == 'virginica')
names(nnet_iristrain)[6] <- 'setosa'
names(nnet_iristrain)[7] <- 'versicolor'
names(nnet_iristrain)[8] <- 'virginica'
nn <- neuralnet(setosa+versicolor+virginica ~ Sepal.Length+Sepal.Width
+Petal.Length +Petal.Width, data=nnet_iristrain, hidden=c(3))
plot(nn)
mypredict <- compute(nn, iristest[-5])$net.result
# Put multiple binary output to categorical output
maxidx <- function(arr) {return(which(arr == max(arr)))}
idx <- apply(mypredict, c(1), maxidx)
prediction <- c('setosa', 'versicolor', 'virginica')[idx]
table(prediction, iristest$Species)
library(neuralnet)
testidx <- which(1:length(iris[,1])%%5 == 0)
iristrain <- iris[-testidx,]
iristest <- iris[testidx,]
nnet_iristrain <- iristrain
#Binarize the categorical output
nnet_iristrain <- cbind(nnet_iristrain, iristrain$Species == 'setosa')
nnet_iristrain <- cbind(nnet_iristrain, iristrain$Species == 'versicolor')
nnet_iristrain <- cbind(nnet_iristrain, iristrain$Species == 'virginica')
names(nnet_iristrain)[6] <- 'setosa'
names(nnet_iristrain)[7] <- 'versicolor'
names(nnet_iristrain)[8] <- 'virginica'
nn <- neuralnet(setosa+versicolor+virginica ~ Sepal.Length+Sepal.Width
+Petal.Length +Petal.Width, data=nnet_iristrain, hidden=c(3))
plot(nn)
mypredict <- compute(nn, iristest[-5])$net.result
# Put multiple binary output to categorical output
maxidx <- function(arr) {return(which(arr == max(arr)))}
idx <- apply(mypredict, c(1), maxidx)
prediction <- c('setosa', 'versicolor', 'virginica')[idx]
table(prediction, iristest$Species)
library(e1071)
tune <- tune.svm(Species~.,
data=iristrain,
gamma=10^(-6:-1),
cost=10^(1:4))
summary(tune)
model <- svm(Species~.,
data=iristrain,
method="C-classification",
kernel="radial",
probability=T,
gamma=0.001,
cost=10000)
prediction <- predict(model, iristest)
table(iristest$Species, prediction)
summary(iristest$Species, prediction)
library(neuralnet)
testidx <- which(1:length(iris[,1])%%3 == 0)
iristrain <- iris[-testidx,]
iristest <- iris[testidx,]
nnet_iristrain <- iristrain
#Binarize the categorical output
nnet_iristrain <- cbind(nnet_iristrain, iristrain$Species == 'setosa')
nnet_iristrain <- cbind(nnet_iristrain, iristrain$Species == 'versicolor')
nnet_iristrain <- cbind(nnet_iristrain, iristrain$Species == 'virginica')
names(nnet_iristrain)[6] <- 'setosa'
names(nnet_iristrain)[7] <- 'versicolor'
names(nnet_iristrain)[8] <- 'virginica'
nn <- neuralnet(setosa+versicolor+virginica ~ Sepal.Length+Sepal.Width
+Petal.Length +Petal.Width, data=nnet_iristrain, hidden=c(3))
plot(nn)
mypredict <- compute(nn, iristest[-5])$net.result
# Put multiple binary output to categorical output
maxidx <- function(arr) {return(which(arr == max(arr)))}
idx <- apply(mypredict, c(1), maxidx)
prediction <- c('setosa', 'versicolor', 'virginica')[idx]
table(prediction, iristest$Species)
names(nnet_iristrain)[7] <- 'versicolor'
